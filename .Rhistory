)
library(gridExtra)
grid.arrange(p1,p2, heights=c(2,1), ncol=1)
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1")) +
theme(
legend.position="top",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
dt_plot <- dt_plot[,.(value=value[type=="IRB"] - value[type=="SA"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=value[date_q=="2007 Q1"])-value,by=variable]
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1")) +
theme(
legend.position="top",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
dt_plot <- dt_plot[,.(value=value[type=="IRB"] - value[type=="SA"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=value[date_q=="2007 Q1"]-value),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="Time",
y="Difference"
) +
scale_linetype_discrete(name="Ratio:") +
theme(legend.position="none") +
scale_x_yearqtr(
format = "%YQ%q"
)
library(gridExtra)
grid.arrange(p1,p2, heights=c(2,1), ncol=1)
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1")) +
theme(
legend.position="top",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
dt_plot <- dt_plot[,.(value=value[type=="IRB"] - value[type=="SA"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=value),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="Time",
y="Difference"
) +
scale_linetype_discrete(name="Ratio:") +
theme(legend.position="none") +
scale_x_yearqtr(
format = "%YQ%q"
)
library(gridExtra)
grid.arrange(p1,p2, heights=c(2,1), ncol=1)
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1")) +
theme(
legend.position="top",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
dt_plot <- dt_plot[,.(value=value[type=="SA"] - value[type=="IRB"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=value),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="Time",
y="IBR minus SA"
) +
scale_linetype_discrete(name="Ratio:") +
theme(legend.position="none") +
scale_x_yearqtr(
format = "%YQ%q"
)
library(gridExtra)
grid.arrange(p1,p2, heights=c(2,1), ncol=1)
dt_full <- copy(dt) # keep copy of full sample
dt <- dt[date_q %between% c("2006 Q1", "2008 Q2")]
dt
library(stargazer)
dt[,post:=ifelse(date_q<"2007 Q1",0,1)] # define structural break indicator
dt[,D:=ifelse(type=="IRB",1,0)] # define treatment dummy
mod_pooled <- lm(lncredit ~ post * D, data = dt)
mod_pooled_X_macro <- lm(lncredit ~ post * D + mp_shock + mprate + gdp + infl, data = dt)
mod_pooled_X_macro <- lm(lncredit ~ post * D + mpshock + mprate + gdp + infl, data = dt)
mod_pooled_X_entity <- lm(lncredit ~ post * D + basel_lev + bsizerw_ + bsize_ + rating + empl + fsize, data = dt)
mod_pooled_X_all <- lm(lncredit ~ post * D + mpshock + mprate + gdp + infl + basel_lev + bsizerw_ + bsize_ + rating + empl + fsize, data = dt)
mods <- list(
mod_pooled,
mod_pooled_X_entity,
mod_pooled_X_macro,
mod_pooled_X_all
)
names(mods) <- c(
"Simple",
"Entity controls",
"Macro controls",
"Full controls"
)
stargazer(
mods,
header = FALSE,
column.labels = names(mods)
)
dt_plot
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1")) +
theme(
legend.position="top",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
dt_tab <- copy(dt_plot) # save for table in annex
dt_tab
dt_plot <- dt_plot[,.(value=value[type=="SA"] - value[type=="IRB"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=value),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="Time",
y="IBR minus SA"
) +
scale_linetype_discrete(name="Ratio:") +
theme(legend.position="none") +
scale_x_yearqtr(
format = "%YQ%q"
)
library(gridExtra)
grid.arrange(p1,p2, heights=c(2,1), ncol=1)
dt_tab[,post:=ifelse(date_q<="2007 Q1",0,1)]
dt_tab
dt_tab[,.(value=mean(value)),by=.(type,variable,post)]
dt_tab <- dt_tab[,.(value=mean(value)),by=.(type,variable,post)]
dt_tab
dcast(dt_tab, type + variable ~ post, value.var = "value")
dt_tab <- dcast(dt_tab, type + variable ~ post, value.var = "value")
setnames(dt_tab,colnames(dt_tab),c("Bank type", "Leverage ratio", "Pre-treatment", "Post-treatment"))
xtable(dt_tab)
?stargazer
dt
lm(lncredit ~ date_q * D, data = dt)
summary(lm(lncredit ~ date_q * D, data = dt))
dt
?xtable
?stargazer
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning = FALSE)
library(data.table)
library(stargazer)
dt[,post:=ifelse(date_q<="2007 Q1",0,1)] # define structural break indicator
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning = FALSE)
library(data.table)
dt <- fread("data/ps2.csv")
library(zoo)
dt[,date_q:=zoo::as.yearqtr(2000 + (date_q-min(date_q))/4)]
library(xtable)
options(xtable.comment = FALSE)
xtab = data.frame(c(summary(dt[date_q=="2007 Q1"]$bsize_)))
colnames(xtab) = "Total assets (logs)"
xtab <- xtable(xtab, label = "Distribution of banks' total assets as of 2017 Q1.")
print(xtab, type="html")
library(ggplot2)
theme_set(theme_bw())
dt[,total_assets_mn:=exp(bsize_)/1e6]
# Assign indicator:
dt_sub <- unique(dt[date_q=="2007 Q1", .(bankid, bsize_)])[,type:=ifelse(bsize_>quantile(bsize_, 0.75),"IRB", "SA")]
dt_sub[,bsize_:=NULL]
setkey(dt, bankid)
setkey(dt_sub, bankid)
dt <- dt_sub[dt]
# Prepare plot:
dt_plot <- melt(dt[date_q=="2007 Q1"], id.vars = c("firmid", "bankid", "date_q", "type"), measure.vars = c("bsize_", "total_assets_mn"))
levels(dt_plot$variable) <- c("Logs", "Levels (millions)")
p <- ggplot(data=dt_plot, aes(x=value, fill=type)) +
geom_histogram(colour="blue") +
scale_fill_manual(
name="Risk-weighting:",
values=c("lightblue", "white")
) +
labs(
x = "Total assets",
y = "Count"
) +
facet_wrap(
~ variable,
scales = "free"
)
p
dt[,basel_lev:=(bcet1_*exp(bsizerw_))/exp(bsize_)] # compute leverage ratio
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1")) +
theme(
legend.position="top",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
dt_tab <- copy(dt_plot[date_q %between% c("2006 Q1", "2008 Q2")]) # save for table in annex
dt_plot <- dt_plot[,.(value=value[type=="SA"] - value[type=="IRB"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=value),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="Time",
y="IBR minus SA"
) +
scale_linetype_discrete(name="Ratio:") +
theme(legend.position="none") +
scale_x_yearqtr(
format = "%YQ%q"
)
library(gridExtra)
grid.arrange(p1,p2, heights=c(2,1), ncol=1)
dt_full <- copy(dt) # keep copy of full sample
dt <- dt[date_q %between% c("2006 Q1", "2008 Q2")]
library(stargazer)
dt[,post:=ifelse(date_q<="2007 Q1",0,1)] # define structural break indicator
dt[,D:=ifelse(type=="IRB",1,0)] # define treatment dummy
mod_pooled <- lm(lncredit ~ post * D, data = dt)
mod_pooled_X_macro <- lm(lncredit ~ post * D + mpshock + mprate + gdp + infl, data = dt)
mod_pooled_X_entity <- lm(lncredit ~ post * D + basel_lev + bsizerw_ + bsize_ + rating + empl + fsize, data = dt)
mod_pooled_X_all <- lm(lncredit ~ post * D + mpshock + mprate + gdp + infl + basel_lev + bsizerw_ + bsize_ + rating + empl + fsize, data = dt)
mods <- list(
mod_pooled,
mod_pooled_X_entity,
mod_pooled_X_macro,
mod_pooled_X_all
)
names(mods) <- c(
"Simple",
"Entity controls",
"Macro controls",
"Full controls"
)
stargazer(
mods,
header = FALSE,
column.labels = names(mods),
column.sep.width = "-5pt",
font.size = "footnotesize",
type = "html"
)
stargazer(
mods,
header = FALSE
# column.labels = names(mods),
# column.sep.width = "-5pt",
# font.size = "footnotesize",
# type = "html"
)
stargazer(
mods,
header = FALSE,
type = "html"
# column.labels = names(mods),
# column.sep.width = "-5pt",
# font.size = "footnotesize",
)
mod_pooled_X_all$terms
attr(mod_pooled_X_all$terms,"term.labels")
cov_labels <- gsub("_","",attr(mod_pooled_X_all$terms,"term.labels"))
stargazer(
mods,
header = FALSE,
type = "html",
column.labels = names(mods),
covariate.labels = cov_labels
# column.sep.width = "-5pt",
# font.size = "footnotesize"
)
lm(lncredit ~ post * D, data = dt)
summary(lm(lncredit ~ post * D, data = dt))
library(felm)
library(lfe)
summary(felm(lncredit ~ post * D | bankid, data = dt))
summary(felm(lncredit ~ post * D | bankid*firmid, data = dt))
dt
dt[,firmbank:=paste(firmid,bankid,sep="_")]
summary(felm(lncredit ~ post * D | firm_bank, data = dt))
summary(felm(lncredit ~ post * D | firmbank, data = dt))
summary(felm(lncredit ~ post * D | firmid + bankid, data = dt))
summary(felm(lncredit ~ factor(date_q) * D | firmbank, data = dt))
mod <- felm(lncredit ~ factor(date_q) * D | firmbank, data = dt)
mod$coefficients
mod$beta
mod <- summary(felm(lncredit ~ factor(date_q) * D | firmbank, data = dt))
mod$coefficients
coef <- data.table(mod$coefficients)
coef
coef
coef[,name:=rownames(mod$coefficients)]
coeff
coef
coef <- coef[name!="D"]
coeff
coef
dt[,unique(date_q)]
coef[,date:=dt[,unique(date_q)]]
coef[grepl(":",name)]
coef <- coef[grepl(":",name)] # keep only coeffs on interaction term
coef[,date:=dt[,unique(date_q)]]
dt
dt[,unique(date_q)[-1]]
coef[,date:=dt[,unique(date_q)[-1]]]
coeff
coef
qnorm(.95)
alpha <- .05
qnorm(1-alpha/2)
coef[,lb:=Estimate-qnorm(1-alpha/2)*`Std. Error`]
coef[,ub:=Estimate+qnorm(1-alpha/2)*`Std. Error`]
# coef[,lb:=Estimate-qnorm(1-alpha/2)*`Std. Error`]
# coef[,ub:=Estimate+qnorm(1-alpha/2)*`Std. Error`]
setnames(coef, c("Estimtate", "Std. Error"), c("estimate", "se"))
# coef[,lb:=Estimate-qnorm(1-alpha/2)*`Std. Error`]
# coef[,ub:=Estimate+qnorm(1-alpha/2)*`Std. Error`]
setnames(coef, c("Estimate", "Std. Error"), c("estimate", "se"))
p <- ggplot(data = coef, aes(x=date, y=estimate)) +
geom_errorbar(aes(ymin=estimate-se, ymax=estimate+se), width=.1) +
geom_point()
p
as.Data("2007-03-01")
as.Date("2007-03-01")
p <- ggplot(data = coef, aes(x=date, y=estimate)) +
geom_errorbar(aes(ymin=estimate-se, ymax=estimate+se), width=.1) +
geom_point() +
geom_vline(xintercept = as.Date("2007-03-01")) +
labs(
x="Time",
y="Coefficient"
)
p
p <- ggplot(data = coef, aes(x=date, y=estimate)) +
geom_errorbar(aes(ymin=estimate-se, ymax=estimate+se), width=.1) +
geom_point() +
geom_vline(xintercept = as.yearqtr("2007 Q1")) +
labs(
x="Time",
y="Coefficient"
)
p
p <- ggplot(data = coef, aes(x=date, y=estimate)) +
geom_errorbar(aes(ymin=estimate-se, ymax=estimate+se), width=.1) +
geom_point() +
geom_vline(xintercept = as.yearqtr("2007 Q1"), colour="red", linetype="dashed") +
labs(
x="Time",
y="Coefficient"
)
p
p <- ggplot(data = coef, aes(x=date, y=estimate)) +
geom_errorbar(aes(ymin=estimate-se, ymax=estimate+se), width=.1) +
geom_point() +
geom_vline(xintercept = as.yearqtr("2007 Q1"), colour="red", linetype="dashed") +
geom_hline(yintercept = 0) +
labs(
x="Time",
y="Coefficient"
)
p
p <- ggplot(data = coef, aes(x=date, y=estimate)) +
geom_errorbar(aes(ymin=estimate-se, ymax=estimate+se), width=.1) +
geom_point() +
geom_vline(xintercept = as.yearqtr("2007 Q1"), colour="red", linetype="dashed") +
geom_hline(yintercept = 0) +
labs(
x="Time",
y="Coefficient"
) +
scale_x_yearqtr(
format = "%YQ%q"
)
p
?scale_x_yearqtr
p <- ggplot(data = coef, aes(x=date, y=estimate)) +
geom_errorbar(aes(ymin=estimate-se, ymax=estimate+se), width=.1) +
geom_point() +
geom_vline(xintercept = as.yearqtr("2007 Q1"), colour="red", linetype="dashed") +
geom_hline(yintercept = 0) +
labs(
x="Time",
y="Coefficient"
) +
scale_x_yearqtr(
format = "%YQ%q",
n=4
)
p
?scale_x_date
p <- ggplot(data = coef, aes(x=date, y=estimate)) +
geom_errorbar(aes(ymin=estimate-se, ymax=estimate+se), width=.1) +
geom_point() +
geom_vline(xintercept = as.yearqtr("2007 Q1"), colour="red", linetype="dashed") +
geom_hline(yintercept = 0) +
labs(
x="Time",
y="Coefficient"
) +
scale_x_yearqtr(
format = "%YQ%q",
limits = c(min(coef$date), max(coef$date))
)
p
ceoff
coef
p <- ggplot(data = coef, aes(x=date, y=estimate)) +
geom_errorbar(aes(ymin=estimate-se, ymax=estimate+se), width=.1) +
geom_point() +
geom_vline(xintercept = as.yearqtr("2007 Q1"), colour="red", linetype="dashed") +
geom_hline(yintercept = 0) +
labs(
x="Time",
y="Coefficient"
) +
scale_x_yearqtr(
format = "%YQ%q"
)
p
alpha <- .05
mod <- summary(felm(lncredit ~ factor(date_q)[-1] * D | firmbank, data = dt))
alpha <- .05
mod <- summary(felm(lncredit ~ factor(date_q) * D | firmbank + date_q, data = dt))
mod
alpha <- .05
mod <- summary(felm(lncredit ~ factor(date_q) * D | firmbank, data = dt))
coef <- data.table(mod$coefficients)
coef[,name:=rownames(mod$coefficients)]
coef <- coef[name!="D"]
coef <- coef[grepl(":",name)] # keep only coeffs on interaction term
coef[,date:=dt[,unique(date_q)[-1]]]
setnames(coef, c("Estimate", "Std. Error"), c("estimate", "se"))
p <- ggplot(data = coef, aes(x=date, y=estimate)) +
geom_errorbar(aes(ymin=estimate-se, ymax=estimate+se), width=.1) +
geom_point() +
geom_vline(xintercept = as.yearqtr("2007 Q1"), colour="red", linetype="dashed") +
geom_hline(yintercept = 0) +
labs(
x="Time",
y="Coefficient"
) +
scale_x_yearqtr(
format = "%YQ%q"
)
p
